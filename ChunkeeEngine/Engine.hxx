#pragma once

#include <mutex>
#include "Window.hxx"


namespace Chunkee
{
	class Engine
	{
	public:
		//////////////////////////////////////////////////////////////////
		static Engine* getInstance(WindowProperties* = nullptr);

		//////////////////////////////////////////////////////////////////
		void cleanup();

		//////////////////////////////////////////////////////////////////
		Engine(const Engine&) = delete;
		void operator=(const Engine&) = delete;

		//////////////////////////////////////////////////////////////////
		void start();

	private:
		//////////////////////////////////////////////////////////////////
		Engine(WindowProperties*);
		~Engine();

		//////////////////////////////////////////////////////////////////
		void _loop();
		bool _handleEvents();
		void _update();
		void _render();

	private:
		static Engine* m_instance;
		static std::mutex m_mutex;
	};
}